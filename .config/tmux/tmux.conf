#
# Tmux configuration file
#

## Internal Settings -------------------------------------------------------------{{{

# wait time after ESC (default 0.5)
set -s escape-time 0
set -g default-terminal screen-256color
# set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g mode-keys vi
set -g renumber-windows on

# iTmer2 じゃ使えない
setw -g aggressive-resize on

# インデックスを１始まりにする
set -g base-index 1
setw -g pane-base-index 1

set -g repeat-time 1000
set -g history-limit 10000

# メッセージ表示秒数
set -g display-time 1200

# ステータスラインを5秒間隔で更新
set -g status-interval 5


# if-shell "which pbcopy" "\
#   bind-key -T copy-mode C-w send-keys -X copy-pipe-and-cancel pbcopy;\
#   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel pbcopy"

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
if-shell "test \"$SSH_CLIENT\" == \"\"" "\
  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \"pbcopy\";\
  bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"pbcopy\"" "\
  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel \"win32yank.exe -i\";\
  bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"win32yank.exe -i\""

# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# }}}

## Plugins -------------------------------------------------------------- {{{

# NOTE: プラギンを追加したら prefix + Shift-i でインストールする
#       削除した場合は prefix + M-u でアンインストール
set -g @plugin 'tmux-plugins/tpm'


# すべてのセッションの状態を保存・復元してくれるプラギン
# https://github.com/tmux-plugins/tmux-resurrect
# NOTE: htop や vim などは復元できるが、docker-compose up 中に閉じたりすると、コンテナの実行状況は維持されるが
#       ログストリームは復元されなかったりするので注意する)
# prefix + C-s -> save
# prefix + C-r -> restore
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Tmux CPU and GPU status
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @cpu_percentage_format "%02d%%"
set -g @ram_percentage_format "%02d%%"

# }}}

## Keybind -------------------------------------------------------------- {{{

unbind-key C-b
set-option -g prefix C-s
bind-key C-s send-prefix

# pane の並び替えのデフォキーを unbind
unbind-key Space

# reload settings
bind-key r source-file ~/.config/tmux/tmux.conf\; display "reloaded ~/.config/tmux/tmux.conf"

# 直前の pane に移動
# unbind -T copy-mode-vi -n @
bind-key -n C-@ last-pane

# pane リサイズ
bind-key -n M-Up    resize-pane -U 2
bind-key -n M-Down  resize-pane -D 2
bind-key -n M-Left  resize-pane -L 2
bind-key -n M-Right resize-pane -R 2
bind-key -n M-k     resize-pane -U 2
bind-key -n M-j     resize-pane -D 2
bind-key -n M-h     resize-pane -L 2
bind-key -n M-l     resize-pane -R 2

# window 位置の入れ替え
bind-key -n M-S-Left "swap-window -t -1; select-window -t -1"
bind-key -n M-S-Right "swap-window -t +1; select-window -t +1"
bind-key H "swap-window -t -1; select-window -t -1"
bind-key L "swap-window -t +1; select-window -t +1"

# select pane
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R

bind-key    i   select-pane -t :.- # select previous pane
bind-key    o   select-pane -t :.+ # select next pane
bind-key -n M-[ select-pane -t :.- # select previous pane
bind-key -n M-] select-pane -t :.+ # select next pane

# split window (カレントディレクトリは維持）
# 分割後のペインがホームディレクトリが良いならデフォルトの " か % を使う）
bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# new window
bind-key c new-window -a # new after (override original setting)
bind-key C-c new-window  # new at end

# マーク済み(prefix m)とカレントペインを入れ替える
bind-key @ swap-pane

# スクロールした状態で C-p を押すと元に戻って上キー入力（iTerm2 の挙動に合わせる）
bind-key -T copy-mode-vi C-p "send-keys -X cancel; send-keys Up"
bind-key -T copy-mode-vi Up "send-keys -X cancel; send-keys Up" # 上キーも同様

# clear pane
# Ctrl+l と同じ。docker のログ表示中とかには効かないので代わりに使う
bind-key k send-keys -R \; if -Ft= "#{pane_in_mode}" "send-keys -X cancel"

# clear history
bind-key K send-keys -R \; clear-history \; if -Ft= "#{pane_in_mode}" "send-keys -X cancel"


## ----------------------------------------------------------------------
# C-w hjkl で vim と tmux pane のシームレスな移動
# https://qiita.com/izumin5210/items/d2e352de1e541ff97079
## ----------------------------------------------------------------------
# # `C-w` で NAVIGATOR table に切り替え
# bind -n C-w switch-client -T NAVIGATOR
# 
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# 
# # `bind-key -n` のかわりに `bind -T NAVIGATOR` にする
# # `send-keys h` のかわりに `send-keys C-w h` にする
# bind -T NAVIGATOR h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
# bind -T NAVIGATOR j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
# bind -T NAVIGATOR k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
# bind -T NAVIGATOR l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
# bind -T NAVIGATOR o if-shell "$is_vim" "send-keys C-w o" "select-pane -l"
# 
# # `C-w` が Tmux に喰われてしまうので，2回打つことで Vim に `C-w` を送れるようにして救う
# # 使用頻度の高い Window command がある場合は，明示的に `bind -T NAVIGATOR <key> send-keys C-w <key>` する
# bind -T NAVIGATOR C-w send-keys C-w
# bind -T NAVIGATOR s send-keys C-w s
# bind -T NAVIGATOR q send-keys C-w q
# bind -T NAVIGATOR v send-keys C-w v
# bind -T NAVIGATOR w send-keys C-w w
# bind -T NAVIGATOR p send-keys C-w p

# }}}

## Mouse ---------------------------------------------------------------- {{{

set-option -g mouse on

# 通常モードからマウスホイールを上に回すとコピーモードに入るが、モードに入るだけで初回はスクロールしないので、モードに入った直後にスクロールする
bind-key -T root WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M; send-keys -X -N 5 scroll-up'"

# スクロールした状態でマウスドラッグで範囲選択した後、コピーモードのままその場に留まる
# スクロールしてなければコピーモードを抜ける
bind-key -T copy-mode-vi MouseDragEnd1Pane if -F "#{>:#{scroll_position},0}" "send-keys -X copy-selection" "send-keys -X copy-selection-and-cancel"

# }}}

## Appearance ----------------------------------------------------------- {{{

# nerd font cheet sheet
# https://www.nerdfonts.com/cheat-sheet

# separators
# separator_left="\ue0bc"
# separator_right="\ue0ba"
# subseparator_left="\ue0bb"
# subseparator_right="\ue0bd"
 
# modules
user_name="#(whoami)"
# module_left_2="%R %a"
# 
# module_right_1="#(ip route get 1 | awk '{print $7}')"
# module_right_2="#H"

set-option -g status-position top
set-option -g status-justify left
# set-option -g status-left-length 90
# set-option -g status-right-length 90
# set-option -g status-left '#H:[#P]'

# set-option -g status-left '#h '
set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-right " \uf114 #{pane_current_path} #[fg=#747eab]\\#[fg=default] \uf2c0 $user_name \uf564 #H #[fg=#747eab]\\#[fg=default] #{cpu_percentage}#{cpu_icon} #{ram_percentage}#{ram_icon} "
set-option -g -w window-status-format ' #I:#W '
set-option -g -w window-status-current-format " #I:#W#[fg=colour215]#F "
# set-option -g -w window-status-current-style 'reverse'
# set-option -g -w window-status-current-style 'reverse'


## GUI Terminal tab name
set-option -g set-titles off
set-option -g set-titles-string '#T'

set -g window-active-style "bg=default" # colour234
set -g window-style "bg=default"
 
# # ## iceberg color
# # ## https://github.com/gkeep/iceberg-dark/blob/master/.tmux/iceberg.tmux.conf
# set -g status-left-style "none"
set -g message-command-style "fg=#c6c8d1,bg=#2e3244"
set -g status-right-style "none,fg=#a5aed9"
set -g status-style "fg=#dcdfe7,bg=#262a40"
set -g message-style "fg=#c6c8d1,bg=#2e3244"

# set -g pane-border-status top
set -g pane-border-format " #{pane_index}: #T "
# set -g pane-active-border-style "fg=#9398b5,bg=colour234" #,bg=#1e2132"
# a0b2e8
set -g pane-active-border-style "fg=#c0c7f0,bg=#1e2132" #,bg=#1e2132"
set -g pane-border-style "fg=#434861"

setw -g window-status-activity-style "none,fg=#454b68,bg=#1e2132"
# setw -g window-status-separator "#[fg=#3e4469,bg=#11131f]|"
# setw -g window-status-style "none,fg=#c6c8d1,bg=#11131f"
# setw -g window-status-current-style 'none,fg=#d7defc,bg=#3f4569'
setw -g window-status-separator "#[fg=#3e4469,bg=#191c2b]│"
setw -g window-status-style "none,fg=#919abf,bg=#191c2b"
setw -g window-status-current-style 'none,fg=#c6c8d1,bg=#070914'
# #1e2132 
set-option -g status-left "#[fg=none,bg=colour23]#{?client_prefix,#[bg=#4d6980],}#{?#{==:#{pane_mode},copy-mode},#[bg=colour23] [#S] , [#S] }"

set -g mode-style "bg=colour23"



# setw -g window-status-style "none,fg=#c6c8d1,bg=#191c2b"
# setw -g window-status-current-style 'none,fg=#c9d1f5,bg=#070914'


# set -g message-command-style "fg=#c6c8d1,bg=#2e3244"
# set -g status-right-style "none"
# set -g status-style "fg=#dcdfe7,bg=#262a40"
# set -g message-style "fg=#c6c8d1,bg=#2e3244"
# 
# set -g pane-border-status top
# set -g pane-border-format " #{pane_index}: #T "
# # set -g pane-active-border-style "fg=#9398b5,bg=colour234" #,bg=#1e2132"
# # a0b2e8
# set -g pane-active-border-style "fg=#c0c7f0,bg=#1e2132" #,bg=#1e2132"
# set -g pane-border-style "fg=#434861"
# 
# setw -g window-status-activity-style "none,fg=#454b68,bg=#1e2132"
# setw -g window-status-separator ""
# setw -g window-status-style "none,fg=#c6c8d1,bg=#191c2b"
# setw -g window-status-current-style 'bold,fg=#c9d1f5,bg=#070914'

# }}}


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
